{"version":3,"sources":["components/FormWrapper/styles.js","components/FormWrapper/index.js","components/FormTitle/styles.js","components/FormTitle/index.js","components/FormSuccess/styles.js","components/FormSuccess/index.js","components/RegisterForm/index.js","components/FormError/styles.js","components/FormError/index.js","components/LoginForm/index.js","pages/Login/styles.js","pages/Login/index.js"],"names":["StyledFormWrapper","styled","form","withConfig","displayName","componentId","FormWrapper","_ref","children","onSubmit","_jsx","StyledTitle","p","FormTitle","StyledMessage","FormSuccess","RegisterForm","userCredentials","setUserCredentials","useState","email","password","passwordConfirmation","successMessage","setSuccesssMessage","handleChange","event","name","value","target","updateUserCredentials","_jsxs","async","preventDefault","alert","user","userService","error","console","FormItem","label","id","type","onChange","required","Button","FormError","LoginForm","dispatch","useDispatch","formData","setFormData","config","loginErrorMessage","useSelector","selectLoginErrorMessage","previousState","logInUser","LoginWrapper","div","Flex","Login","Wrapper"],"mappings":"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","file":"static/js/3.9438bc54.chunk.js","sourcesContent":["import styled from \"styled-components/macro\";\n\nexport const StyledFormWrapper = styled.form`\n  padding: 1.6rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.6rem;\n`;\n","import { StyledFormWrapper } from \"./styles\";\n\nconst FormWrapper = ({ children, onSubmit }) => (\n  <StyledFormWrapper onSubmit={onSubmit}>{children}</StyledFormWrapper>\n);\n\nexport default FormWrapper;\n","import styled from \"styled-components/macro\";\n\nexport const StyledTitle = styled.p`\n  font-size: 2.4rem;\n  font-weight: bold;\n`;\n","import { StyledTitle } from \"./styles\";\n\nconst FormTitle = ({ children }) => {\n  return <StyledTitle>{children}</StyledTitle>;\n};\n\nexport default FormTitle;\n","import styled from \"styled-components/macro\";\n\nexport const StyledMessage = styled.p`\n  color: green;\n  font-size: 1.4rem;\n`;\n","import { StyledMessage } from \"./styles\";\n\nconst FormSuccess = ({ children }) => <StyledMessage>{children}</StyledMessage>;\n\nexport default FormSuccess;\n","import { useState } from \"react\";\nimport Button from \"../Button\";\nimport FormItem from \"../FormItem\";\nimport FormWrapper from \"../FormWrapper\";\nimport FormTitle from \"../FormTitle\";\nimport FormSuccess from \"../FormSuccess\";\nimport * as userService from \"../../services/userService\";\n\nconst updateUserCredentials = (name, value) => (userCredentials) => ({\n  ...userCredentials,\n  [name]: value,\n});\n\nconst RegisterForm = () => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n  });\n  const [successMessage, setSuccesssMessage] = useState(null);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setUserCredentials(updateUserCredentials(name, value));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (userCredentials.password !== userCredentials.passwordConfirmation) {\n      return alert(\"Password does not match\");\n    }\n\n    const user = {\n      name: userCredentials.displayName,\n      email: userCredentials.email,\n      password: userCredentials.password,\n      passwordConfirmation: userCredentials.passwordConfirmation,\n    };\n\n    try {\n      await userService.createUser(user);\n      setSuccesssMessage(\"Successful register\");\n      setUserCredentials({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirmation: \"\",\n      });\n    } catch (error) {\n      console.error(error);\n      setSuccesssMessage(null);\n    }\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <FormTitle>Register</FormTitle>\n      <FormItem\n        label=\"Display Name\"\n        id=\"displayName\"\n        name=\"displayName\"\n        type=\"text\"\n        value={userCredentials.displayName}\n        onChange={handleChange}\n        required\n      />\n      <FormItem\n        label=\"Email\"\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        value={userCredentials.email}\n        onChange={handleChange}\n        required\n      />\n      <FormItem\n        label=\"Password\"\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        value={userCredentials.password}\n        onChange={handleChange}\n        required\n      />\n      <FormItem\n        label=\"Password Confirmation\"\n        id=\"passwordConfirmation\"\n        name=\"passwordConfirmation\"\n        type=\"password\"\n        value={userCredentials.passwordConfirmation}\n        onChange={handleChange}\n        required\n      />\n      {successMessage && <FormSuccess>{successMessage}</FormSuccess>}\n      <Button type=\"submit\">Register</Button>\n    </FormWrapper>\n  );\n};\n\nexport default RegisterForm;\n","import styled from \"styled-components/macro\";\n\nexport const StyledMessage = styled.p`\n  font-size: 1.4rem;\n  color: red;\n`;\n","import { StyledMessage } from \"./styles\";\n\nconst FormError = ({ children }) => {\n  return <StyledMessage>{children}</StyledMessage>;\n};\n\nexport default FormError;\n","import Button from \"../Button\";\nimport FormItem from \"../FormItem\";\nimport FormWrapper from \"../FormWrapper\";\nimport FormTitle from \"../FormTitle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logInUser, selectLoginErrorMessage } from \"../../store/shared/userSlice\";\nimport { useState } from \"react\";\nimport FormError from \"../FormError\";\nimport * as config from \"../../config\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    email: config.isDevMode() ? \"jhon.doe@email.com\" : \"\",\n    password: config.isDevMode() ? \"123456789\" : \"\",\n  });\n  const loginErrorMessage = useSelector(selectLoginErrorMessage);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const userCredentials = {\n      email: formData.email,\n      password: formData.password,\n    };\n\n    dispatch(logInUser(userCredentials));\n  };\n\n  const handleChange = (event) =>\n    setFormData((previousState) => ({\n      ...previousState,\n      [event.target.name]: event.target.value,\n    }));\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <FormTitle>Login</FormTitle>\n      <FormItem\n        id=\"loginEmail\"\n        label=\"Email\"\n        name=\"email\"\n        value={formData.email}\n        onChange={handleChange}\n        type=\"email\"\n        required\n      />\n      <FormItem\n        id=\"loginPassword\"\n        label=\"Password\"\n        name=\"password\"\n        value={formData.password}\n        onChange={handleChange}\n        type=\"password\"\n        required\n      />\n      <Button type=\"submit\">Login</Button>\n      {loginErrorMessage && <FormError>{loginErrorMessage}</FormError>}\n    </FormWrapper>\n  );\n};\n\nexport default LoginForm;\n","import styled from \"styled-components/macro\";\n\nexport const LoginWrapper = styled.div`\n  padding-top: 3.2rem;\n`;\n\nexport const Flex = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(425px, 1fr));\n`;\n","import RegisterForm from \"../../components/RegisterForm\";\nimport LoginForm from \"../../components/LoginForm\";\nimport Wrapper from \"../../components/Wrapper\";\nimport { LoginWrapper, Flex } from \"./styles\";\n\nconst Login = () => {\n  return (\n    <LoginWrapper>\n      <Wrapper>\n        <Flex>\n          <RegisterForm />\n          <LoginForm />\n        </Flex>\n      </Wrapper>\n    </LoginWrapper>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}